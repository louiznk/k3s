// Code generated for package deploy by go-bindata DO NOT EDIT. (@generated)
// sources:
// manifests/ccm.yaml
// manifests/coredns.yaml
// manifests/local-storage.yaml
// manifests/metrics-server/aggregated-metrics-reader.yaml
// manifests/metrics-server/auth-delegator.yaml
// manifests/metrics-server/auth-reader.yaml
// manifests/metrics-server/metrics-apiservice.yaml
// manifests/metrics-server/metrics-server-deployment.yaml
// manifests/metrics-server/metrics-server-service.yaml
// manifests/metrics-server/resource-reader.yaml
// manifests/rolebindings.yaml
// manifests/traefik.yaml
package deploy

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ccmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x3f\x6f\xe3\x30\x0c\xc5\x77\x7d\x0a\x21\x4b\x80\x03\x9c\xe0\xb6\x83\xc7\xeb\xd0\x3d\x40\xbb\xd3\x12\x9b\xa8\x91\x45\x81\xa4\x1c\xb4\x9f\xbe\x70\x9c\x16\x81\xdd\xfc\x71\x36\xc2\x20\x7f\xef\xd1\xd4\x83\x1c\x5e\x91\x25\x50\xaa\x2d\x37\xe0\x56\x50\x74\x47\x1c\x3e\x41\x03\xa5\xd5\xfe\x9f\xac\x02\xad\xbb\xbf\x66\x1f\x92\xaf\xed\x53\x2c\xa2\xc8\x1b\x8a\x68\x5a\x54\xf0\xa0\x50\x1b\x6b\x13\xb4\x58\x5b\x17\xa9\xf8\xca\x51\x52\xa6\x18\x91\xab\x16\x12\x6c\x91\x0d\x97\x88\x52\x9b\xca\x42\x0e\xcf\x4c\x25\x4b\x3f\x54\x59\x47\xc4\x3e\xa4\x73\x2d\x63\x2d\xa3\x50\x61\x87\xa7\xa6\x88\x20\x28\xc6\xda\x0e\xb9\x39\x7d\xdb\xa2\x0e\x00\x46\x50\x3c\x96\x25\xfb\xbe\x9c\x68\x2c\x16\x53\x24\x76\x98\x74\x84\x3c\x43\x65\x50\xb7\x9b\x0d\x4d\xe4\xc7\x36\x97\x7f\x96\x33\x66\xd7\xa2\xa0\x65\x84\x18\xbc\xdc\x05\x11\xe4\x2e\xb8\xb1\x87\x18\x44\x7f\xdf\xaa\x2f\x0f\xb3\xf1\xe0\x1c\x95\x4b\x7f\xef\x2e\x50\xee\x1f\x9c\x28\x26\xed\x28\x96\xf6\xd2\x6d\x7f\x8c\x3f\x66\x17\x93\xcf\x14\xae\x9d\x79\x22\x74\x98\xdc\xbd\xaa\xcc\xe3\x09\xf9\x1f\x92\x0f\x69\x3b\x2b\x28\x14\x71\x83\x6f\x7d\xe7\xf7\x8a\x57\x54\x8d\xb5\xd3\x58\xde\xd4\x90\xd2\xbc\xa3\xd3\x63\x1e\x87\xf1\x17\x41\xbe\x3d\x37\x34\x48\x06\x87\xb5\xdd\x97\x06\x2b\xf9\x10\xc5\xd6\x7c\x05\x00\x00\xff\xff\xff\xea\xf1\x4c\x44\x04\x00\x00")

func ccmYamlBytes() ([]byte, error) {
	return bindataRead(
		_ccmYaml,
		"ccm.yaml",
	)
}

func ccmYaml() (*asset, error) {
	bytes, err := ccmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ccm.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _corednsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x5f\x6f\x1b\x39\x0e\x7f\xf7\xa7\x10\xe6\xd0\xb7\x1b\x27\x46\x90\x5e\x4e\x6f\x6d\x92\x6b\x03\x34\xae\x11\x27\x7d\x39\x2c\x0a\x5a\x43\x7b\xb4\xd1\x88\x5a\x49\xe3\xc6\xdb\xcd\x77\x5f\x68\xfe\x59\x72\x26\x45\x1a\x74\xe7\x49\x12\xc5\x1f\x45\x8a\xfc\x89\x03\x46\x7e\x41\xeb\x24\x69\xce\xb6\xb3\xc9\xbd\xd4\x05\x67\x4b\xb4\x5b\x29\xf0\x9d\x10\x54\x6b\x3f\xa9\xd0\x43\x01\x1e\xf8\x84\x31\x0d\x15\x72\x26\xc8\x62\xa1\x5d\x37\x77\x06\x04\x72\x76\x5f\xaf\x30\x77\x3b\xe7\xb1\x9a\xe4\x79\x3e\x89\xa1\xed\x0a\xc4\x14\x6a\x5f\x92\x95\x7f\x82\x97\xa4\xa7\xf7\x67\x6e\x2a\xe9\x68\x3b\x5b\xa1\x87\xde\xf2\xb9\xaa\x9d\x47\x7b\x43\x0a\x13\xb3\x0a\x56\xa8\x5c\x18\xb1\xc6\x8e\xd5\xe8\xb1\xd1\x5f\x11\x79\xe7\x2d\x18\x23\xf5\xa6\x35\x94\x17\xb8\x86\x5a\x79\x37\x9c\xb7\x3d\x15\xef\x8f\x6d\x6b\x85\x8e\x4f\x72\x06\x46\x7e\xb0\x54\x9b\x06\x39\x67\x59\x36\x61\xcc\xa2\xa3\xda\x0a\xec\xd6\x50\x17\x86\xa4\x6e\xc0\x72\xe6\xda\xc8\xb4\x13\x43\x45\x3b\x18\x82\x10\xa6\x5b\xb4\xab\x4e\x57\x49\xe7\x9b\xc1\x37\xf0\xa2\x7c\x99\x3d\x4d\xc5\x21\xcc\x06\xfd\xaf\x08\xe8\x7b\xa9\x0b\xa9\x37\x49\x5c\x41\x6b\xf2\x8d\x7a\x17\xdc\x31\xdc\x24\xde\x50\x7b\xaa\x4d\x01\x1e\x39\xcb\xbc\xad\x31\xfb\xf5\xd7\x43\x0a\x6f\x70\xdd\x9c\xaf\x0b\xd8\x0f\x1c\x9e\x30\xf6\x34\x77\x9e\x41\x76\xf5\xea\x77\x14\xbe\xb9\xfb\xd1\x54\x7f\x75\x82\x0f\xb5\x73\x4e\x7a\x2d\x37\xd7\x60\x5e\x53\x36\xfd\xf6\x73\xb2\xb8\x96\x0a\x39\xfb\xab\x89\xe9\x94\x9f\x9e\xb0\xef\xcd\x30\x7c\x68\x2d\x59\x37\x4c\x4b\x04\xe5\xcb\x61\x6a\x11\x8a\xdd\x30\xdb\x5f\x07\x7b\xf3\xfd\xfc\xd3\xdd\xf2\xf6\xf2\xe6\xeb\xc5\xe7\xeb\x77\x57\xf3\xc7\x37\x4c\xea\x1c\x8a\xc2\x4e\xc1\x1a\x60\xd2\xbc\x6d\x07\x7b\x4b\xac\x49\x72\x26\xb5\x43\x51\x5b\x8c\xd6\x6b\xe3\xbc\x45\xa8\xa2\xa5\x35\x28\xe5\x4b\x4b\xf5\xa6\x1c\x07\x1e\xf6\x3e\xee\xcf\x4e\xce\x3b\x76\x84\x5e\x1c\x75\xd1\x39\x9a\x53\x81\x1f\x9b\xe5\xf8\x1c\x16\x15\x41\xc1\x66\x6e\xdc\xe0\x08\xb4\xb1\x54\xa1\x2f\xb1\x76\x8c\xff\x77\x76\x7a\x32\x08\xd6\x64\xbf\x81\x2d\xd8\xb4\xb5\x1b\x0a\x50\x6d\xa7\x82\xf4\x7a\xd8\x22\x40\x94\xc8\x4e\x8e\x87\x05\x45\x64\x26\xe9\x59\x22\x19\x14\x2b\x50\xa0\x45\x1b\xa0\xc7\x27\xd9\x01\xc6\xb8\xa3\x21\x45\x2e\xd0\x28\xda\x55\xf8\x3a\x6a\x3d\xa8\xb6\x33\x97\x83\x31\xdd\x96\x56\xf1\xb0\x06\x5b\xe0\x2c\x24\xd5\xc5\x7c\x99\x4d\x9c\x41\x11\xb4\xff\x65\xd1\x28\x29\xc0\x71\x36\x9b\x30\x16\xca\xd4\xe3\x66\xd7\x02\xfb\x9d\x41\xce\x6e\x48\x29\xa9\x37\x77\x4d\xc1\xb7\x04\x11\xaf\xf0\x2e\x06\x15\x3c\xdc\x69\xd8\x82\x54\xb0\x0a\x59\xdb\xc0\xa1\x42\xe1\xc9\xb6\x7b\xaa\xc0\x80\x9f\xa2\x83\x8f\x1f\xdd\x63\x65\xd4\x00\x1c\x47\xa7\x09\x74\xa2\xff\x9c\xf3\xbd\x7b\xcd\x38\x29\xef\xf9\x41\x84\x1b\x3f\x49\xa1\x8d\x19\x30\x7c\x39\xbb\xc7\x5d\x08\x99\x95\x5e\x0a\x50\xef\x8a\x82\xb4\xfb\xac\xd5\x2e\x8b\xd2\x8f\x4c\xd0\x24\xcb\x59\x76\xf9\x20\x9d\x77\xd9\x13\x80\xc0\xe6\x79\xe0\xb3\x03\x16\xad\x20\x50\xd5\x0b\xc1\x18\xc3\xf5\x1a\x85\xe7\x2c\x9b\xd3\x52\x94\x58\xd4\x0a\x7b\x71\xb0\xb0\x4c\x42\x1d\xbe\xf0\x04\x1c\x98\x24\xc7\x99\x92\xba\x7e\xe8\x36\x09\xd2\x1e\xa4\x46\x3b\xf8\x9d\x3f\x49\xc1\xf6\x93\x15\x6c\xf6\xcb\x7d\x9d\xf2\xd9\xf4\xed\xf4\x24\xdd\xb4\xa8\x95\x5a\x90\x92\x62\xc7\xd9\xd5\x7a\x4e\x7e\x61\xd1\x61\xc3\xab\x7d\xe5\x44\x8f\xdd\x50\x3f\xb2\x92\x3e\x59\x09\x57\x5f\x91\xdd\x71\x36\xfb\xcf\xf1\xb5\x4c\x68\xe0\x8f\x1a\xdd\xe1\x6e\x61\x6a\xce\x66\xc7\xc7\xd5\x28\x46\x02\x01\x76\xe3\x38\xfb\x3f\xcb\xf2\x50\xf0\xd9\xbf\x59\x96\x90\x4f\xcf\xbc\x19\xfb\x6d\x50\xd9\x92\xaa\x2b\xbc\x0e\x19\x94\xe4\x48\x1f\xad\x40\xf8\x79\xbb\x29\xb2\x5f\x85\xfd\x0b\xf0\x25\x4f\xe8\x2d\xf1\x05\x8a\x90\x53\x9c\x85\x77\x74\xcf\x5b\x64\x53\x3b\xc3\x4d\x2d\xc8\x7a\xce\x22\x26\xeb\x49\x23\xc5\x35\x96\x3c\x09\x52\x9c\xdd\x5d\x2c\x7e\x16\x27\xf7\xc2\x8c\x62\xdd\x9e\xff\x00\x2b\xe1\xd7\x1e\xad\x42\x6f\xa5\x18\x3f\x59\x8c\xd6\xbc\x2d\xd2\xef\xce\x49\x7b\x7c\xf0\xf1\xd5\x82\x52\xf4\x6d\x61\xe5\x56\x2a\xdc\xe0\xa5\x13\xa0\x9a\x5a\xe5\x81\xfb\x5d\x1c\x6e\x01\x06\x56\x52\x49\x2f\xf1\x20\x39\xa0\x28\xd2\x85\x9c\xcd\x2f\x6f\xbf\xbe\xbf\x9a\x5f\x7c\x5d\x5e\xde\x7c\xb9\x3a\xbf\x4c\xc4\x85\x25\x73\xa8\x00\x4a\x8d\x5c\xdc\x0d\x91\xff\x9f\x54\xd8\x75\x19\xe9\x35\x2a\xb9\x45\x8d\xce\x2d\x2c\xad\x30\xc6\x2b\xbd\x37\x1f\xd0\xa7\x26\x4c\x9b\x28\x07\x4f\x39\xeb\xd2\x81\xb3\xb3\xe3\xb3\xe3\x64\xd9\x89\x12\x43\x90\x3f\xde\xde\x2e\x22\x81\xd4\xd2\x4b\x50\x17\xa8\x60\xb7\x44\x41\xba\x70\x9c\xbd\x8d\x55\xbd\xac\x90\x6a\x3f\x08\x4f\x23\x99\xab\x85\x40\xe7\x6e\x4b\x8b\xae\x24\x55\xb4\x4c\xde\x7f\x6b\x90\xaa\xb6\x18\x49\x4f\x93\xa6\x43\xfe\xb4\xbb\x69\xab\x12\x79\x3b\x3b\x9b\xbd\xda\xdb\xd9\x3f\xed\x6d\xa1\x5d\x4f\x72\x17\x6d\x2b\xdb\x09\x5a\x0e\xf8\x09\x8e\x10\x7d\xb3\x98\x46\x67\x9c\x86\x1b\x87\x3d\x56\xee\x30\x39\x9b\xa7\xa6\x27\xae\x44\xd6\x07\x7a\x54\xd8\x29\x0e\xed\xd6\xa8\xe6\x5e\xfa\x6c\xc7\xdb\xb5\xd0\x23\xbd\x4c\xf4\x2c\x3f\xdb\xcc\x3c\xf9\x03\xd9\xb7\x6d\xe1\xd5\x6a\xf3\x21\x0b\xfc\x92\x8d\x88\x9d\xb0\x60\x9e\xfd\x13\x79\x41\x6f\x24\xda\x9f\x86\xbc\x6b\x14\x22\xa4\x97\x76\x51\x69\x9f\x33\x66\xb3\xb3\x71\xb5\xe0\x71\x0b\x3e\x5f\x3e\xbe\x99\x44\x6c\x9f\x1f\x70\xb9\x89\x49\xfa\x90\xd2\xf3\x11\xc2\x7e\x46\xa1\x65\xda\x7c\x84\x93\x4d\x4a\xdd\xa9\xca\xdf\x01\x00\x00\xff\xff\xf9\x2f\x39\x78\x19\x10\x00\x00")

func corednsYamlBytes() ([]byte, error) {
	return bindataRead(
		_corednsYaml,
		"coredns.yaml",
	)
}

func corednsYaml() (*asset, error) {
	bytes, err := corednsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coredns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localStorageYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x6f\xe3\x36\x10\xbe\xeb\x57\x0c\x04\xec\xa5\x58\xda\xeb\x5b\xc1\x9b\xeb\xc7\x76\x01\xbf\x10\xa7\xed\x21\x58\x18\x34\x35\xb6\xb9\xa1\x48\x81\x1c\xa9\x75\xd3\xfc\xf7\x82\x7a\x38\x92\xed\x24\x0e\x8a\xf2\xe2\x64\x38\xf3\xcd\xeb\x9b\xa1\x44\xa6\x7e\x47\xe7\x95\x35\x1c\x8a\x41\xf4\xa8\x4c\xc2\x61\x8d\xae\x50\x12\x87\x52\xda\xdc\x50\x94\x22\x89\x44\x90\xe0\x11\x80\x11\x29\x72\xd0\x56\x0a\xcd\x32\x41\x07\x96\x39\x5b\xa8\x60\x8f\x8e\xf9\xca\x8e\x89\xda\xb0\x52\xf7\x99\x90\xc8\xe1\x31\xdf\x22\xf3\x47\x4f\x98\x46\x8c\xb1\xa8\xed\xd9\x6d\x85\xec\x89\x9c\x0e\xd6\xa9\xbf\x05\x29\x6b\x7a\x8f\x3f\xfb\x9e\xb2\xfd\x62\xb0\x45\x12\x4d\x60\x23\x9d\x7b\x42\x77\x67\x35\xde\x1e\x95\x0b\xda\x2e\xd7\xe8\x79\xc4\x40\x64\xea\xab\xb3\x79\xe6\x39\x3c\xc4\xf1\xf7\x08\xc0\xa1\xb7\xb9\x93\x58\x4a\x8c\x4d\xd0\xc7\x9f\x21\xce\x42\x6c\x9e\xd0\x50\x61\x75\x9e\xa2\xd4\x42\xa5\xbe\x34\x28\xd0\x6d\x4b\xe5\x3d\x52\x50\xd5\xca\x97\xbf\x7f\x0a\x92\x87\xf8\xfb\xfb\x4e\xd0\x24\x99\x55\x86\xae\x3a\xaa\x84\x36\x39\xf3\xf5\xd3\x4d\xc0\x05\x06\xd4\x8e\xa1\x74\x28\x08\x4b\xd0\xeb\xf1\x79\xb2\x4e\xec\xb1\xae\xf8\x25\x68\x7d\x2f\xb5\xf0\x1e\x6f\xac\xc0\x7f\xef\xef\x2f\xca\x24\xca\xec\x6f\x6f\xf3\x56\x99\x24\x0a\xbd\xbe\xc3\x5d\x50\x6e\x72\x7c\xc3\x7b\x04\x70\xc9\xab\x5b\xd8\xe4\xf3\xed\x0f\x94\x54\x12\xea\xea\xc8\xfc\x5f\x83\x22\xb2\xcc\xf7\x4f\x73\x3a\xc6\x4c\xdb\x63\x8a\x1f\x98\xd1\xd7\x5d\xf9\x0c\x25\x2f\x7b\x9f\x69\x25\x85\xe7\x30\x88\x00\x3c\x6a\x94\x64\x5d\xb8\x01\x48\x43\x7f\x67\x62\x8b\xda\x57\x82\x50\xe6\xec\x0d\x5f\x84\x69\xa6\x05\x61\x6d\xde\x0a\x32\x1c\xdd\x41\x7a\x0f\x0b\xa0\x09\xb1\xfc\xbb\x53\xf0\xc5\xc7\xaa\x1d\x0e\x59\x8d\xae\x64\x43\x2b\x02\x00\x06\x8f\x78\xe4\x10\x8f\x9c\x22\x25\x85\x1e\x26\x89\x35\x7e\x69\xf4\x31\x6e\x69\x01\xd8\x2c\x58\x5b\xc7\x21\x9e\xfc\xa5\x3c\xf9\xf8\x0a\x48\xd8\x26\x25\x63\x7a\xa1\xd2\xce\x20\x61\xc9\xfa\x54\x04\xba\x7d\x00\x10\x00\x77\x3b\x94\xc4\x21\x5e\xd8\xb5\x3c\x60\x92\x6b\x6c\x14\xa4\x35\x24\x94\x41\x77\x4a\x84\xbd\xc7\x81\xea\xa8\x54\xec\x91\x83\x13\x46\x1e\xd0\xf5\xaf\x6b\xf3\xe2\x4b\xef\x4b\x6f\x30\xe8\x5a\xad\x72\xad\x57\x56\x2b\x79\xe4\xf0\x6d\xb7\xb0\xb4\x72\xe8\xf1\x54\xdc\x10\x54\x9a\x0a\x93\xbc\x94\x96\xbd\x17\x0d\x03\x4f\xc2\x51\xeb\x7f\xc6\xa4\x35\x3b\xb5\x6f\x89\xfa\x48\xb2\x5f\x49\xeb\x9f\xde\x0f\x6f\xcd\x49\xa3\xda\xa1\xf3\xd0\x67\xdf\xf6\x5d\xd5\xa3\xb2\x60\x95\x52\xab\xbc\x69\xd0\x5f\x09\x3a\xf0\x8e\x83\x93\x06\x9a\xe2\x12\x6c\xb5\x1c\x6f\x16\xc3\xf9\x64\xbd\x1a\x8e\x26\x2d\xb0\x42\xe8\x1c\xa7\xce\xa6\xbc\xd3\xc0\x9d\x42\x9d\xd4\xbb\xe9\x42\x5e\xf9\x6e\xe6\xa3\x77\x1a\xd1\xa8\x9d\xd5\x07\x12\xaa\xe4\x73\x91\x75\xbd\x5d\xb0\xa2\xae\xef\xf9\x9a\xe9\x3e\x09\x2f\x0b\x67\x5d\xc9\x47\xe1\x29\x78\x73\xe5\x84\xfd\x6b\x8c\xa5\xf6\x7c\xb5\xdf\x91\xb3\x79\x50\x9e\x25\xb8\x13\xb9\x26\x56\x5e\x73\x88\xc9\xe5\x18\x47\x6d\x1e\x36\x3c\x0d\x06\x2d\x4f\x55\xee\xf5\x73\x31\xb7\x09\x72\xf8\x43\x28\x9a\x5a\x37\x55\xce\xd3\xc8\x1a\x9f\xa7\xe8\x22\x57\x3d\xe1\x0d\x69\xc7\xa8\x91\xb0\xcc\xbc\x7e\x03\x9a\x92\x45\x67\xdf\x44\x6f\xae\xd6\x13\x41\x5f\xd9\xaa\x8d\x61\x8b\xab\x1c\xfe\x61\xa7\xae\x3c\x9d\xb1\x01\xaa\xa5\x11\xf8\x30\x17\x59\xcc\x1f\x2e\xee\x2f\x2d\x3a\x96\x31\x8f\xc7\x93\xe9\xf0\xb7\xd9\xfd\x66\x35\xbc\xff\x75\x33\x5d\xde\x6d\x16\xcb\xc5\x66\xf6\x6d\x7d\x3f\x19\x6f\x16\xcb\xf1\x64\x1d\x7f\x7e\x1d\x23\x64\xe5\x63\xfe\x10\x7f\x7a\x6a\x70\x66\xcb\xd1\x70\xb6\x59\xdf\x2f\xef\x86\x5f\x27\x25\xea\xf3\xa7\xf2\x33\xa0\x7b\x9e\x2f\x24\x2f\x3a\xcf\xd1\xbf\x01\x00\x00\xff\xff\x0b\xbe\xbc\xe4\x69\x0a\x00\x00")

func localStorageYamlBytes() ([]byte, error) {
	return bindataRead(
		_localStorageYaml,
		"local-storage.yaml",
	)
}

func localStorageYaml() (*asset, error) {
	bytes, err := localStorageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "local-storage.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAggregatedMetricsReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x31\x6b\xf4\x30\x0c\xc6\xf1\xdd\x9f\x42\x78\x7e\x93\x97\x6e\xc5\x6b\x87\xee\x1d\xba\x94\x1b\x94\xf8\x21\x27\xce\xb1\x83\x24\xe7\x68\x3f\x7d\xb9\x70\xdc\x58\x68\x27\x0d\x7f\x7e\x0f\xe8\x22\x35\x27\x7a\x29\xdd\x1c\xfa\xd6\x0a\x02\x6f\xf2\x0e\x35\x69\x35\x91\x4e\x3c\x8f\xdc\xfd\xdc\x54\xbe\xd8\xa5\xd5\xf1\xf2\x6c\xa3\xb4\xff\xfb\x53\x58\xe1\x9c\xd9\x39\x05\xa2\xca\x2b\x12\xd9\xa7\x39\xd6\xc4\xcb\xa2\x58\xd8\x91\x87\x15\xae\x32\xdb\xa0\xe0\x0c\x0d\x44\x85\x27\x14\xbb\x11\xfa\x61\xfd\xb1\x30\x78\x1b\x76\xc1\x35\x51\x74\xed\x88\xbf\x71\xc8\xe2\x7f\x71\x9c\x57\xa9\x0f\xa8\xbd\xc0\x52\x18\x88\x37\x79\xd5\xd6\x37\x4b\xf4\x11\xef\x7f\xdd\x7d\x3c\x05\x22\x85\xb5\xae\x33\x8e\xbe\xb5\x6c\xf1\x1f\xc5\xda\x32\xec\xc8\x3b\x74\x3a\xd2\x02\xbf\x95\x22\x76\xdc\x2b\xfb\x7c\x8e\xa7\xf0\x1d\x00\x00\xff\xff\xe5\x1d\x7a\x17\x89\x01\x00\x00")

func metricsServerAggregatedMetricsReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAggregatedMetricsReaderYaml,
		"metrics-server/aggregated-metrics-reader.yaml",
	)
}

func metricsServerAggregatedMetricsReaderYaml() (*asset, error) {
	bytes, err := metricsServerAggregatedMetricsReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/aggregated-metrics-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthDelegatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xbb\x4e\xc4\x40\x0c\x45\xfb\xf9\x8a\xf9\x81\x09\xda\x0e\xb9\x03\x0a\xfa\x45\xa2\x77\x26\x97\xc5\x24\x19\x47\xb6\x27\x12\x7c\x3d\x5a\x11\xd1\xf0\x68\xaf\x74\xcf\x39\xa5\x94\xc4\x9b\x3c\xc3\x5c\xb4\x51\xb6\x91\xeb\xc0\x3d\x5e\xd5\xe4\x83\x43\xb4\x0d\xf3\xad\x0f\xa2\x37\xfb\x69\x44\xf0\x29\xcd\xd2\x26\xca\x0f\x4b\xf7\x80\x9d\x75\xc1\xbd\xb4\x49\xda\x25\xad\x08\x9e\x38\x98\x52\xce\x8d\x57\x50\x5e\x11\x26\xd5\x8b\xc3\x76\x18\xf9\xbb\x07\x56\xba\xd2\xcb\x84\x05\x17\x0e\xb5\x64\xba\xe0\x8c\x97\xeb\x8b\x37\x79\x34\xed\xdb\x3f\x19\x29\xe7\x1f\x01\xdf\xbe\xdf\x05\xde\xc7\x37\xd4\x70\x4a\xe5\xf8\x3e\xc1\x76\xa9\xb8\xab\x55\x7b\x8b\x3f\x72\x8f\xd9\x37\xae\xa0\x3c\xf7\x11\xe5\x8b\x9f\x3e\x03\x00\x00\xff\xff\x69\xfc\x98\x93\x34\x01\x00\x00")

func metricsServerAuthDelegatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthDelegatorYaml,
		"metrics-server/auth-delegator.yaml",
	)
}

func metricsServerAuthDelegatorYaml() (*asset, error) {
	bytes, err := metricsServerAuthDelegatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-delegator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x3d\x4e\xc4\x40\x0c\x46\xfb\x39\xc5\x5c\xc0\x41\xdb\xa1\xe9\xa0\xa1\x5f\x24\x7a\x67\xf2\x01\x26\x1b\x4f\x64\x7b\x22\xe0\xf4\x28\x68\xf9\x69\x76\x7b\xfb\x7d\xef\x11\x51\xe2\x55\x9e\x60\x2e\x4d\x4b\xb6\x91\xeb\xc0\x3d\x5e\x9b\xc9\x27\x87\x34\x1d\xe6\x5b\x1f\xa4\xdd\x6c\x87\x11\xc1\x87\x34\x8b\x4e\x25\x1f\xdb\x09\xf7\xa2\x93\xe8\x4b\x5a\x10\x3c\x71\x70\x49\x39\x2b\x2f\x28\x79\x41\x98\x54\x27\x87\x6d\x30\xda\x79\x64\xe0\x09\x76\x3e\xf1\x95\x2b\x4a\x9e\xfb\x08\xf2\x0f\x0f\x2c\xc9\xda\x09\x47\x3c\xef\x10\x5e\xe5\xc1\x5a\x5f\xaf\xe8\xa4\x9c\xff\x44\x7e\x77\xf1\x1e\xd0\x3d\x84\x78\x95\x7f\xe3\xd0\x90\xfa\xfd\xfe\xa3\xe1\x7d\x7c\x43\x0d\x2f\x89\xce\xa0\x47\xd8\x26\x15\x77\xb5\xb6\xae\x71\x21\xe5\xb2\xfe\x57\x00\x00\x00\xff\xff\xc7\x9e\x8d\xd1\x49\x01\x00\x00")

func metricsServerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthReaderYaml,
		"metrics-server/auth-reader.yaml",
	)
}

func metricsServerAuthReaderYaml() (*asset, error) {
	bytes, err := metricsServerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsApiserviceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x6a\xc4\x30\x0c\x85\xf7\x3e\x85\x2e\xe0\x74\xb2\x2b\xde\x75\x59\x68\x61\x20\x65\xf6\x1a\x8f\x3a\x08\xe3\x1f\x24\x39\x90\xdb\x97\x30\x71\xba\x13\x7a\xef\xfb\x90\xbc\xf7\x0e\x1b\xdf\x48\x94\x6b\x09\x80\x8d\x85\x9e\xac\x26\x68\x5c\xcb\x94\xde\x75\xe2\xfa\xb6\xce\x77\x32\x9c\x5d\xe2\xf2\x08\xf0\x71\xfd\x5c\x48\x56\x8e\xe4\x32\x19\x3e\xd0\x30\x38\x80\x82\x99\x02\x1c\xd5\x29\x93\x09\x47\x3d\x0c\x4e\x1b\xc5\xbd\xa4\x2f\x70\x1f\x07\x71\x34\xfd\x1e\x91\x9c\x81\x36\x8c\x14\x20\xf5\x3b\x79\xdd\xd4\x28\x3b\x80\xa7\xd4\xde\x4e\x64\xc8\x01\xd6\xf1\xc0\xb8\x14\x80\x8b\x52\xec\x42\x4b\xe2\xf6\xf3\xb5\xdc\x48\xf8\x77\x0b\x60\xd2\x69\x88\xae\xc2\x55\xd8\xb6\x6f\x2e\x9c\x7b\x0e\x30\x5f\x2e\xff\xb2\x91\xbe\xd6\x7f\x01\x00\x00\xff\xff\x25\x03\x92\xf5\x2a\x01\x00\x00")

func metricsServerMetricsApiserviceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsApiserviceYaml,
		"metrics-server/metrics-apiservice.yaml",
	)
}

func metricsServerMetricsApiserviceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsApiserviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-apiservice.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x51\x4d\x8b\x13\x51\x10\xbc\xcf\xaf\x28\xe2\xf9\x25\x8a\x20\xf2\x6e\x8b\xeb\x4d\x57\x61\xc1\x7b\xef\x9b\x8e\x79\xe4\x7d\xd1\xdd\x19\x1d\xc4\xff\x2e\xe3\x24\x63\xb2\xbb\x11\xc1\x77\x1a\x7a\xaa\xba\xaa\xba\x9c\x73\x1d\xb5\xf8\x85\x45\x63\x2d\x1e\xc3\xab\x6e\x1f\x4b\xef\x71\xcf\x32\xc4\xc0\x37\x21\xd4\x43\xb1\x2e\xb3\x51\x4f\x46\xbe\x03\x0a\x65\xf6\xc8\x6c\x12\x83\x3a\x65\x19\x58\x8e\x63\x6d\x14\xd8\x63\x7f\x78\x60\xa7\xa3\x1a\xe7\xee\xb1\x02\xb5\xa6\x9b\x45\xe6\x96\x5b\xaa\x63\xe6\xff\x92\x00\x12\x3d\x70\xd2\x89\x09\xec\xdf\xaa\xa3\xd6\x9e\xd0\xb5\x71\x98\x10\xca\x89\x83\x55\x99\xd1\x99\x2c\xec\x3e\x9c\xd1\xaf\x2f\x00\x8c\x73\x4b\x64\x7c\xa4\x9e\x19\x9e\xde\x15\xd3\xd3\x4b\x17\x02\x7f\x93\x00\x4e\x3e\x7f\x7f\x5f\xb4\x70\x77\x5d\xc0\x6a\x62\x21\x8b\xb5\x9c\xa9\x38\xec\x79\xf4\x58\xbd\x93\x68\x31\x50\xba\xe9\xfb\x5a\xf4\x53\x49\xe3\x6a\xc1\x00\xb5\x4d\xcc\x2a\x1e\xab\xf7\xdf\xa3\x9a\xae\x9e\x2c\x28\xb5\x67\x27\x35\xf1\x7a\x3a\xbb\x14\x36\xd6\x75\xac\x9b\x4c\x6a\x2c\xff\xb8\x0c\xe0\xed\x96\x83\x79\xac\xee\xea\x7d\xd8\x71\x7f\x48\x7c\xfa\x3d\xd4\x74\xc8\xbc\x78\x7f\x81\x3c\x05\x46\x2c\xb0\xdc\xa0\x15\xdf\x18\x81\x0a\x94\xb6\x9c\x46\x1c\x94\xb1\x95\x9a\x9d\x06\x99\x0a\x44\xcc\xf4\x95\x15\x54\xfa\x4d\x15\x08\x53\xef\x6a\x49\x23\x42\x2d\x46\xb1\xb0\x68\x77\x8a\x34\xd7\x64\xb9\xb9\x3e\xca\xe2\x8e\x73\xb3\xf1\x36\x8a\xc7\x8f\x9f\xc7\xe1\x1f\xae\x7f\x44\x7e\xb6\x02\xcc\x26\x3c\x84\x4a\xd8\xb1\x6c\x2e\x51\x7e\x78\xb9\x7e\xbd\x7e\xb3\x80\xe7\xc4\x1f\xa7\x98\x17\x95\x3d\x6f\x0f\xf3\x41\x3e\x93\xed\x3c\x36\x96\x5b\xd7\xfd\x0a\x00\x00\xff\xff\x40\xda\x3c\x8b\xbb\x03\x00\x00")

func metricsServerMetricsServerDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerDeploymentYaml,
		"metrics-server/metrics-server-deployment.yaml",
	)
}

func metricsServerMetricsServerDeploymentYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x26\xf7\x28\xe2\x1e\x24\x57\xcf\xc2\x82\xe2\xbd\x37\x5b\x48\x98\xfc\xd1\xdd\x33\xe0\xdb\xcb\xc4\x41\x10\xe6\xd6\x54\x57\x7d\x55\x21\x04\xc7\x23\x7f\x42\x34\xf7\x16\x69\x7b\x72\x4b\x6e\xf7\x48\xef\x90\x2d\x27\xb8\x0a\xe3\x3b\x1b\x47\x47\xd4\xb8\x22\x52\x85\x49\x4e\x1a\x14\xb2\x41\x0e\x59\x07\x27\x44\x5a\xd6\x1b\x82\x7e\xab\xa1\x3a\xa2\xc2\x37\x14\xdd\x93\x34\x3f\xd2\x60\xd0\x87\xdc\x1f\x7f\x49\xfe\xed\x1f\xca\x9f\x18\x53\x59\xd5\x20\xd3\x91\xf7\x06\x6f\xb2\xc2\x3b\x1d\x48\x3b\x58\x51\x90\xac\xcb\x51\xf2\xa2\x81\xc7\x38\xd9\x38\xba\xd8\x5c\x12\xe6\x19\xe9\x72\x79\x9e\x91\x21\xdd\x7a\xea\x25\xd2\xc7\xeb\x75\x2a\xc6\xf2\x05\xbb\xfe\xb9\x7e\x02\x00\x00\xff\xff\x92\x19\xf9\x3e\x23\x01\x00\x00")

func metricsServerMetricsServerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerServiceYaml,
		"metrics-server/metrics-server-service.yaml",
	)
}

func metricsServerMetricsServerServiceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerResourceReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7c\x0a\xeb\xf6\xf4\xc4\x86\xb2\x01\x03\xfb\x21\xb1\xbb\xa9\xb9\x33\x6d\xe3\xca\x76\x8a\xe0\xd3\xa3\x6b\xcb\x1f\x81\x74\x42\x62\xca\x4b\xe2\x9f\x9f\xde\x8b\x31\x06\x9c\xf8\x91\xd4\x58\x4a\x02\x6d\x31\x37\x58\xfd\x24\xca\x6f\xe8\x2c\xa5\xe9\xaf\xad\x61\xd9\xcf\x57\xa1\xe7\xd2\x25\xb8\x1b\xaa\x39\xe9\x41\x06\x0a\x23\x39\x76\xe8\x98\x02\x40\xc1\x91\x12\xd8\xab\x39\x8d\x69\x24\x57\xce\x16\x8d\x74\x26\x0d\x5a\x07\xb2\x14\x22\xe0\xc4\xf7\x2a\x75\xb2\x33\x11\x61\xb7\x0b\x00\x4a\x26\x55\x33\x6d\x6f\x93\x74\xb6\x88\x22\x1d\x7d\x53\x7b\x73\xf4\xed\x8e\x23\xd9\x84\x79\xf9\x9e\x49\xdb\x0d\x3d\x92\x2f\xe7\xc0\xb6\x8a\x17\xf4\x7c\x0a\xff\x0b\x79\xcb\xa5\xe3\x72\xfc\x7b\x56\x19\xe8\x40\x4f\xe7\xb1\x8f\xb4\x17\x2c\x03\xc0\xef\x5a\x2f\x1b\x58\x6d\x9f\x29\xfb\xd2\xe7\xca\x3e\x90\xce\x9c\xe9\x26\x67\xa9\xc5\x3f\xf1\x1f\x1c\x7c\xf5\x96\xa0\xaf\x2d\xc5\x75\x7f\x78\x0f\x00\x00\xff\xff\x39\x82\xcc\x46\x05\x02\x00\x00")

func metricsServerResourceReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerResourceReaderYaml,
		"metrics-server/resource-reader.yaml",
	)
}

func metricsServerResourceReaderYaml() (*asset, error) {
	bytes, err := metricsServerResourceReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/resource-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x21\xbb\x72\x38\xdc\x72\xf0\xd8\x0e\xdd\x03\xb4\x3b\x6d\xb3\x09\x6b\x59\x14\x48\x2a\x41\xfb\xeb\x0b\xa7\x6e\x82\xa4\x76\x90\xb4\xdd\x24\x41\x7c\x1f\x1f\xf9\x20\xd3\x13\x8a\x12\xa7\xca\x4b\x0d\xcd\x12\x8a\x6d\x58\xe8\x0d\x8c\x38\x2d\xbb\xff\xba\x24\xfe\xb3\xfd\xeb\x3a\x4a\x6d\xe5\xef\x63\x51\x43\x59\x71\xc4\x3b\x4a\x2d\xa5\xb5\xeb\xd1\xa0\x05\x83\xca\x79\x9f\xa0\xc7\xca\x77\xa5\xc6\x00\x99\x14\x65\x8b\x12\x86\x6b\x44\x0b\xd0\xf6\x94\x9c\x70\xc4\x15\x3e\x0f\xbf\x21\xd3\x83\x70\xc9\x17\xc8\xce\xfb\x2f\xe0\x03\x47\x5f\xd5\xb0\xaf\x0e\xfa\x99\x46\x86\x96\xfa\x05\x1b\xd3\xca\x85\x9b\x20\x8f\x8a\x32\xe3\xc2\xb9\x10\x82\xfb\xfe\xb4\x26\xc6\xf4\xd9\xfe\x3f\x0d\x0d\x27\x13\x8e\x11\xc5\x49\x89\x78\xd2\xb8\x0e\x15\xc1\x2f\x16\xce\x7b\x41\xe5\x22\x0d\x8e\x6f\x89\x5b\x54\xe7\xfd\x16\xa5\x1e\x9f\xd6\x68\x57\xd6\x42\x8f\x9a\xa1\x39\x17\x88\xa4\xb6\x3f\xec\xc0\x9a\xcd\x84\x56\x42\xdb\xb1\x74\x94\xd6\xa3\xdf\x29\xf1\x8f\x3f\x99\x23\x35\x74\x33\x61\x42\x10\x53\x9b\x99\x92\xe9\xfe\x96\xb9\x9d\xd3\x1c\xfc\x1f\xb5\x7f\xb8\xb4\xf9\x88\xcf\xec\xee\xf7\xb3\x7d\x0a\x38\x06\x7b\xf0\x78\x1d\xe3\x2c\xdc\x97\x01\xef\x01\x00\x00\xff\xff\x46\xd3\x6d\x9d\x0f\x04\x00\x00")

func rolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingsYaml,
		"rolebindings.yaml",
	)
}

func rolebindingsYaml() (*asset, error) {
	bytes, err := rolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rolebindings.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _traefikYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x25\x90\x63\xe4\xe6\x56\x74\xeb\x8f\xa1\xa5\x50\x42\xd3\xf6\x5a\xd6\xf2\x24\x16\x91\x64\xa1\x5d\x05\xda\xd2\x77\x2f\x0e\x3e\xe6\xb8\x3b\x1f\x1f\x33\x9c\xfd\x27\x8a\xf8\x29\x59\x1a\x11\xa2\x71\xac\x1a\x60\xfc\xd4\x9e\xb7\xcd\xc9\xa7\xc1\xd2\x13\x42\x7c\x18\xb9\x68\x13\xa1\x3c\xb0\xb2\x6d\x88\x12\x47\x58\xd2\xc2\x38\xf8\xd3\x72\x4b\x66\x07\x4b\xa7\xda\x63\x23\xdf\xa2\x88\x8d\x64\xb8\x19\x77\xb3\xc0\xd2\xa8\x9a\xc5\xb6\xed\xfa\xf7\xe5\xe3\xbe\x7b\x7b\xed\xde\xbb\xfd\xd7\xdd\xee\xf9\x6f\xdd\x8a\xb2\x7a\xd7\x5e\x40\x69\x17\xf1\x66\x6b\x6e\xb7\xe6\xc6\xe8\xf1\xa7\x21\x12\xe8\xec\x22\x2a\x3d\x3b\x83\xc4\x7d\xc0\x60\x69\xa5\xa5\x62\x75\x09\x44\xc2\xd5\x7f\x84\x16\xef\xc4\xe4\x32\x45\xe8\x88\x2a\x57\xb1\xb9\x79\x49\x50\x88\xf1\xe9\x58\x20\xd2\xa5\x21\x4f\x3e\xa9\xa9\x82\x47\x1c\xb8\x06\xdd\xd5\x3e\x78\x19\x31\xec\x51\xce\x7e\x1e\xbc\x18\xfe\x03\x00\x00\xff\xff\xb5\x07\xd7\x40\x4d\x01\x00\x00")

func traefikYamlBytes() ([]byte, error) {
	return bindataRead(
		_traefikYaml,
		"traefik.yaml",
	)
}

func traefikYaml() (*asset, error) {
	bytes, err := traefikYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "traefik.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ccm.yaml":           ccmYaml,
	"coredns.yaml":       corednsYaml,
	"local-storage.yaml": localStorageYaml,
	"metrics-server/aggregated-metrics-reader.yaml": metricsServerAggregatedMetricsReaderYaml,
	"metrics-server/auth-delegator.yaml":            metricsServerAuthDelegatorYaml,
	"metrics-server/auth-reader.yaml":               metricsServerAuthReaderYaml,
	"metrics-server/metrics-apiservice.yaml":        metricsServerMetricsApiserviceYaml,
	"metrics-server/metrics-server-deployment.yaml": metricsServerMetricsServerDeploymentYaml,
	"metrics-server/metrics-server-service.yaml":    metricsServerMetricsServerServiceYaml,
	"metrics-server/resource-reader.yaml":           metricsServerResourceReaderYaml,
	"rolebindings.yaml":                             rolebindingsYaml,
	"traefik.yaml":                                  traefikYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ccm.yaml":           &bintree{ccmYaml, map[string]*bintree{}},
	"coredns.yaml":       &bintree{corednsYaml, map[string]*bintree{}},
	"local-storage.yaml": &bintree{localStorageYaml, map[string]*bintree{}},
	"metrics-server": &bintree{nil, map[string]*bintree{
		"aggregated-metrics-reader.yaml": &bintree{metricsServerAggregatedMetricsReaderYaml, map[string]*bintree{}},
		"auth-delegator.yaml":            &bintree{metricsServerAuthDelegatorYaml, map[string]*bintree{}},
		"auth-reader.yaml":               &bintree{metricsServerAuthReaderYaml, map[string]*bintree{}},
		"metrics-apiservice.yaml":        &bintree{metricsServerMetricsApiserviceYaml, map[string]*bintree{}},
		"metrics-server-deployment.yaml": &bintree{metricsServerMetricsServerDeploymentYaml, map[string]*bintree{}},
		"metrics-server-service.yaml":    &bintree{metricsServerMetricsServerServiceYaml, map[string]*bintree{}},
		"resource-reader.yaml":           &bintree{metricsServerResourceReaderYaml, map[string]*bintree{}},
	}},
	"rolebindings.yaml": &bintree{rolebindingsYaml, map[string]*bintree{}},
	"traefik.yaml":      &bintree{traefikYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
